webpackJsonp([5],{1013:function(e,t,a){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var o=a(0),r=a(38),s=a(86),i=a(289),l=a(1604),n=a(1680),p=a(1602),c=a(1603);a.d(t,"SettingModule",(function(){return d}));var d=(function(){function e(){}return e=__decorate([a.i(o.NgModule)({imports:[r.CommonModule,s.FormsModule,i.a,n.a,s.ReactiveFormsModule],declarations:[l.a,p.a],providers:[c.a]}),__metadata("design:paramtypes",[])],e)})()},1602:function(e,t,a){"use strict";var o=a(0),r=a(86),s=a(30),i=a(1603);a.d(t,"a",(function(){return l}));var l=(function(){function e(e,t,a){this.service=t,this.router=a,this.submitted=!1,this.form=e.group({web_title:["",r.Validators.compose([r.Validators.required])],report_server_path:["",r.Validators.compose([r.Validators.required])],expired_po_date:["",r.Validators.compose([r.Validators.required])],bass_pusat:["",r.Validators.compose([r.Validators.required])],email_port:["",r.Validators.compose([r.Validators.required])],email_smtp:["",r.Validators.compose([r.Validators.required])],email_username:["",r.Validators.compose([r.Validators.required])],email_password:["",r.Validators.compose([r.Validators.required])],email_service:["",r.Validators.compose([r.Validators.required])]}),this.web_title=this.form.controls.web_title,this.report_server_path=this.form.controls.report_server_path,this.expired_po_date=this.form.controls.expired_po_date,this.bass_pusat=this.form.controls.bass_pusat,this.email_port=this.form.controls.email_port,this.email_smtp=this.form.controls.email_smtp,this.email_username=this.form.controls.email_username,this.email_password=this.form.controls.email_password,this.email_service=this.form.controls.email_service}return e.prototype.ngOnInit=function(){var e=this;this.service.getSystemParameter().then((function(t){e.form.controls.web_title.setValue(t[0].WEB_TITLE),e.form.controls.report_server_path.setValue(t[0].REPORT_SERVER_PATH),e.form.controls.expired_po_date.setValue(t[0].EXPIRED_PO_DATE),e.form.controls.bass_pusat.setValue(t[0].BASS_PUSAT),e.form.controls.email_port.setValue(t[0].EMAIL_PORT),e.form.controls.email_smtp.setValue(t[0].EMAIL_SMTP),e.form.controls.email_username.setValue(t[0].EMAIL_USERNAME),e.form.controls.email_password.setValue(t[0].EMAIL_PASSWORD),e.form.controls.email_service.setValue(t[0].EMAIL_SERVICE)}),(function(t){1==t._body.data.indexOf("TokenExpiredError")&&500==t.status?(alert("Your Token has expired, please login again !"),sessionStorage.clear(),e.router.navigate(["/login"])):alert(t._body.data)}))},e.prototype.onSubmit=function(e){this.form.valid&&this.service.saveSetting(e).then((function(e){alert("Setting berhasil diupdate")}),(function(e){alert("Setting gagal diupdate")}))},e=__decorate([a.i(o.Component)({selector:"generalsetting",styles:[a(1760)],template:a(1826)}),__metadata("design:paramtypes",[r.FormBuilder,i.a,s.Router])],e)})()},1603:function(e,t,a){"use strict";var o=a(0),r=a(101),s=a(55),i=a(567);a.n(i);a.d(t,"a",(function(){return l}));var l=(function(){function e(e,t){this.http=e,this.global=t}return e.prototype.saveSetting=function(e){var t=JSON.stringify({web_title:e.web_title,report_server_path:e.report_server_path,expired_po_date:e.expired_po_date,bass_pusat:e.bass_pusat,email_port:e.email_port,email_smtp:e.email_smtp,email_username:e.email_username,email_password:e.email_password,email_service:e.email_service}),a=new r.Headers({"Content-Type":"application/json"}),o=new r.RequestOptions({headers:a});return this.http.post(this.global.getGlobalUrl()+"/updategeneralsetting",t,o).toPromise().catch(this.handleError)},e.prototype.handleError=function(e){return Promise.reject(e)},e.prototype.getSystemParameter=function(){var e=this.global.Decrypt("mAuth").TOKEN,t=new r.Headers({"Content-Type":"application/json","x-access-token":e}),a=new r.RequestOptions({headers:t});return this.http.get(this.global.getGlobalUrl()+"/get_systemparam",a).toPromise().then((function(e){return e.json()})).catch(this.handleError)},e=__decorate([a.i(o.Injectable)(),__metadata("design:paramtypes",[r.Http,s.a])],e)})()},1604:function(e,t,a){"use strict";var o=a(0);a.d(t,"a",(function(){return r}));var r=(function(){function e(){}return e=__decorate([a.i(o.Component)({selector:"setting",template:"<router-outlet></router-outlet>"}),__metadata("design:paramtypes",[])],e)})()},1680:function(e,t,a){"use strict";var o=a(30),r=a(1604),s=a(1602);a.d(t,"a",(function(){return l}));var i=[{path:"",component:r.a,children:[{path:"generalsetting",component:s.a}]}],l=o.RouterModule.forChild(i)},1760:function(e,t){e.exports='.auth-main{display:flex;align-items:center;height:100%;width:100%;position:absolute}.auth-block{width:540px;margin:0 auto;border-radius:5px;background:rgba(0,0,0,0.55);color:#fff;padding:32px}.auth-block h1{font-weight:300;margin-bottom:28px;text-align:center}.auth-block p{font-size:16px}.auth-block a{text-decoration:none;outline:none;transition:all 0.2s ease;color:#209e91}.auth-block a:hover{color:#1b867b}.auth-block .control-label{padding-top:11px;color:#fff}.auth-block .form-group{margin-bottom:12px}.auth-input{width:300px;margin-bottom:24px}.auth-input input{display:block;width:100%;border:none;font-size:16px;padding:4px 10px;outline:none}a.forgot-pass{display:block;text-align:right;margin-bottom:-20px;float:right;z-index:2;position:relative}.auth-link{display:block;font-size:16px;text-align:center;margin-bottom:33px}.auth-sep{margin-top:36px;margin-bottom:24px;line-height:20px;font-size:16px;text-align:center;display:block;position:relative}.auth-sep>span{display:table-cell;width:30%;white-space:nowrap;padding:0 24px;color:#fff}.auth-sep>span>span{margin-top:-12px;display:block}.auth-sep:before,.auth-sep:after{border-top:solid 1px #fff;content:"";height:1px;width:35%;display:table-cell}.al-share-auth{text-align:center}.al-share-auth .al-share{float:none;margin:0;padding:0;display:inline-block}.al-share-auth .al-share li{margin-left:24px}.al-share-auth .al-share li:first-child{margin-left:0}.al-share-auth .al-share li i{font-size:24px}.btn-auth{color:#fff !important}\n'},1826:function(e,t){e.exports='<div class="auth-block">\n    <form [formGroup]="form" (ngSubmit)="onSubmit(form.value)" class="form-horizontal">\n        <div class="form-group row" [ngClass]="{\'has-error\': (!web_title.valid && web_title.touched), \'has-success\': (web_title.valid && web_title.touched)}">\n            <label for="inputWebtitle3" class="col-sm-4 control-label">Web Title</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="web_title" type="text" class="form-control" id="inputWebtitle3" placeholder="Web Title">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!report_server_path.valid && report_server_path.touched), \'has-success\': (report_server_path.valid && report_server_path.touched)}">\n            <label for="inputReportserverpath3" class="col-sm-4 control-label">Report Server Path</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="report_server_path" type="text" class="form-control" id="inputReportserverpath3" placeholder="Report Server Path">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!expired_po_date.valid && expired_po_date.touched), \'has-success\': (expired_po_date.valid && expired_po_date.touched)}">\n            <label for="inputExpiredpodate3" class="col-sm-4 control-label">Expired PO Date</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="expired_po_date" type="text" class="form-control" id="inputExpiredpodate3" placeholder="Expired PO Date">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!bass_pusat.valid && bass_pusat.touched), \'has-success\': (bass_pusat.valid && bass_pusat.touched)}">\n            <label for="inputBasspusat3" class="col-sm-4 control-label">Bass Pusat</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="bass_pusat" type="text" class="form-control" id="inputBasspusat3" placeholder="Bass Pusat">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!email_port.valid && email_port.touched), \'has-success\': (email_port.valid && email_port.touched)}">\n            <label for="inputEmailport3" class="col-sm-4 control-label">Email Port</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="email_port" type="text" class="form-control" id="inputEmailport3" placeholder="Email Port">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!email_smtp.valid && email_smtp.touched), \'has-success\': (email_smtp.valid && email_smtp.touched)}">\n            <label for="inputEmailsmtp3" class="col-sm-4 control-label">Email SMTP</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="email_smtp" type="text" class="form-control" id="inputEmailsmtp3" placeholder="Email SMTP">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!email_username.valid && email_username.touched), \'has-success\': (email_username.valid && email_username.touched)}">\n            <label for="inputEmailusername3" class="col-sm-4 control-label">Email Username</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="email_username" type="text" class="form-control" id="inputEmailusername3" placeholder="Email Username">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!email_password.valid && email_password.touched), \'has-success\': (email_password.valid && email_password.touched)}">\n            <label for="inputEmailpassword3" class="col-sm-4 control-label">Email Password</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="email_password" type="text" class="form-control" id="inputEmailpassword3" placeholder="Email Password">\n            </div>\n        </div>\n        <div class="form-group row" [ngClass]="{\'has-error\': (!email_service.valid && email_service.touched), \'has-success\': (email_service.valid && email_service.touched)}">\n            <label for="inputEmailservice3" class="col-sm-4 control-label">Email Service</label>\n\n            <div class="col-sm-8">\n                <input [formControl]="email_service" type="text" class="form-control" id="inputEmailservice3" placeholder="Email Service">\n            </div>\n        </div>\n\n        <div class="form-group row">\n            <div class="offset-sm-4 col-sm-8">\n                <button [disabled]="!form.valid" type="submit" class="btn btn-default btn-auth">Ubah Setting</button>\n            </div>\n        </div>\n        <!-- <span *ngIf="errorMsg" class="auth-link">{{ errorMsg }}</span> -->\n    </form>\n</div>'}});